package labapp;

import javax.swing.JOptionPane;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import javax.swing.JPanel;
import java.awt.Color;
import java.sql.*;
import java.util.Date;  // For handling dates in Java

//import java.awt.event.*;
import javax.swing.JOptionPane;
import java.awt.*;
import java.awt.geom.RoundRectangle2D;
import javax.swing.table.DefaultTableModel;
import javax.swing.BorderFactory;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author masihullahomar
 */
public class Patients extends javax.swing.JFrame {

    /**
     * Creates new form Patient
     */
    private Connection connection;
    private Statement stm;
    private ResultSet rs;
    private DefaultTableModel model;
    
    
    public Patients() {
        initComponents();
        setLocationRelativeTo(null);
//        setShape(new RoundRectangle2D.Double(0,0,getWidth(),getHeight(),20,20));
//        getContentPane().setBackground(Color.white);
        connection = new DatabaseConnection().connect();
        model = new DefaultTableModel();
        patientTable.setModel(model);
        showPatients();
    }
    
    private void showPatients() {
    try {

        // Initialize table model
        model.setColumnCount(0);
        model.addColumn("Patient ID");
        model.addColumn("Name");
        model.addColumn("Phone");
        model.addColumn("Address");
        model.addColumn("Gender");
        model.addColumn("Date of Birth");
//        patientTable.setModel(model);

        // Query to select all patients
        stm = connection.createStatement();
        rs = stm.executeQuery("SELECT * FROM patientTbl");
        
        model.setRowCount(0);

        // Populate table with data from the result set
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("patientId"),
                rs.getString("patientName"),
                rs.getString("patientPhone"),
                rs.getString("patientAddress"),
                rs.getString("gender"),
                rs.getDate("dateOfBirth")
            });
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
}
    
private void clearInputFields() {
    patientIdField.setText("");
    patientNameField.setText("");
    patientPhoneField.setText("");
    patientAddressField.setText("");
    genderField.setSelectedIndex(0); // Resets the gender dropdown to the first item
    patientDateOfBirthField.setDate(null); // Clears the date of birth field
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new RoundedPanel(0,30,0,30);
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        patientDateOfBirthField = new com.toedter.calendar.JDateChooser();
        patientIdField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        patientNameField = new javax.swing.JTextField();
        genderField = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        patientPhoneField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        patientAddressField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        updatePatientBtn = new RoundedButton(20);
        deletePatientBtn = new RoundedButton(20);
        addPatientBtn = new RoundedButton(20);
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1100, 550));

        jPanel1.setBackground(new java.awt.Color(255, 25, 25));
        jPanel1.setPreferredSize(new java.awt.Dimension(150, 0));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labapp/Statics/patient_w.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labapp/Statics/result_w.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labapp/Statics/test_w.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labapp/Statics/laboratorian_w.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labapp/Statics/log_out.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labapp/Statics/lab.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(66, 66, 66)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(25, 25, 25))
        );

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("Patient Number");

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setText("Patient Date Of Birth");

        patientNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNameFieldActionPerformed(evt);
            }
        });

        genderField.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        genderField.setForeground(new java.awt.Color(153, 153, 153));
        genderField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other", " " }));
        genderField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderFieldActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText("Patient Name");

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 51, 51));
        jLabel11.setText("Patient Gender");

        patientAddressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientAddressFieldActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 51, 51));
        jLabel12.setText("Patient Address");

        updatePatientBtn.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        updatePatientBtn.setForeground(new java.awt.Color(255, 51, 51));
        updatePatientBtn.setText("Update Patient");
        updatePatientBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatePatientBtnMouseClicked(evt);
            }
        });
        updatePatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePatientBtnActionPerformed(evt);
            }
        });

        deletePatientBtn.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        deletePatientBtn.setForeground(new java.awt.Color(255, 51, 51));
        deletePatientBtn.setText("Delete Patient");
        deletePatientBtn.setOpaque(true);
        deletePatientBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletePatientBtnMouseClicked(evt);
            }
        });
        deletePatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatientBtnActionPerformed(evt);
            }
        });

        addPatientBtn.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        addPatientBtn.setForeground(new java.awt.Color(255, 25, 25));
        addPatientBtn.setText("Add Patient");
        addPatientBtn.setOpaque(true);
        addPatientBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPatientBtnMouseClicked(evt);
            }
        });

        //jScrollPane1.getViewport().setBackground(Color.WHITE);
        jScrollPane1.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));

        patientTable.setAutoCreateRowSorter(true);
        patientTable.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Number ", "Name", "Gender", "Address", "Phone", "Date Of Birth"
            }
        ));
        patientTable.setGridColor(java.awt.Color.white);
        jScrollPane1.setViewportView(patientTable);

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 3, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 51, 51));
        jLabel13.setText("Patient Phone");

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 3, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 25, 25));
        jLabel14.setText("Marmara Medical Lab");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labapp/Statics/minus-circle.png"))); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labapp/Statics/minimize.png"))); // NOI18N
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labapp/Statics/x-circle.png"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(patientIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(patientNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(genderField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(patientPhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(patientAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(patientDateOfBirthField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(updatePatientBtn)
                                            .addComponent(addPatientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deletePatientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addGap(418, 418, 418))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel15))
                .addGap(33, 33, 33)
                .addComponent(jLabel14)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(genderField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientPhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(patientAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(patientDateOfBirthField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(addPatientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(updatePatientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(deletePatientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        new Patients().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        new Results().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        new Tests().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        new Laboratorians().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        new DashBoard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void patientNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNameFieldActionPerformed

    private void genderFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderFieldActionPerformed

    private void patientAddressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientAddressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientAddressFieldActionPerformed

    private void updatePatientBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatePatientBtnMouseClicked
        // TODO add your handling code here:
        try {
            int selectedRow = patientTable.getSelectedRow();
            if (selectedRow != -1) {
                String patientId = model.getValueAt(selectedRow, 0).toString(); // Get patientId from the selected row
                String patientName = patientNameField.getText();
                String patientPhone = patientPhoneField.getText();
                String patientAddress = patientAddressField.getText();
                String gender = (String) genderField.getSelectedItem();
                Date patientDateOfBirth = patientDateOfBirthField.getDate();

                // Prepare the SQL query to update the patient record
                String query = "UPDATE patientTbl SET patientName = ?, patientPhone = ?, patientAddress = ?, gender = ?, dateOfBirth = ? WHERE patientId = ?";
                PreparedStatement pst = connection.prepareStatement(query);
                pst.setString(1, patientName);
                pst.setString(2, patientPhone);
                pst.setString(3, patientAddress);
                pst.setString(4, gender);
                pst.setDate(5, new java.sql.Date(patientDateOfBirth.getTime()));
                pst.setString(6, patientId);

                // Execute the update
                pst.executeUpdate();

                // Refresh the table
                JOptionPane.showMessageDialog(this, "Patient updated successfully.");
                showPatients();
                clearInputFields(); // Clear input fields
            } else {
                JOptionPane.showMessageDialog(this, "Please select a patient to update.");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_updatePatientBtnMouseClicked

    private void updatePatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePatientBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePatientBtnActionPerformed

    private void deletePatientBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletePatientBtnMouseClicked
        // TODO add your handling code here:
        try {
        int selectedRow = patientTable.getSelectedRow();
        if (selectedRow != -1) {
            String patientId = model.getValueAt(selectedRow, 0).toString(); // Get patientId from the selected row
            
            // Start a transaction to ensure data consistency
            connection.setAutoCommit(false);
            
            // Delete dependent rows from resultsTbl
            String deleteResultsQuery = "DELETE FROM resultsTbl WHERE patientId = ?";
            PreparedStatement pstResults = connection.prepareStatement(deleteResultsQuery);
            pstResults.setString(1, patientId);
            pstResults.executeUpdate();
            
            // Delete the patient from patientTbl
            String deletePatientQuery = "DELETE FROM patientTbl WHERE patientId = ?";
            PreparedStatement pstPatient = connection.prepareStatement(deletePatientQuery);
            pstPatient.setString(1, patientId);
            pstPatient.executeUpdate();
            
            // Commit the transaction
            connection.commit();
            
            // Remove the row from the table model
            model.removeRow(selectedRow);
            
            JOptionPane.showMessageDialog(this, "Patient and related results deleted successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a patient to delete.");
        }
    } catch (SQLException ex) {
        try {
            // Rollback the transaction in case of an error
            connection.rollback();
        } catch (SQLException rollbackEx) {
            JOptionPane.showMessageDialog(this, "Rollback Error: " + rollbackEx.getMessage());
        }
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    } finally {
        try {
            // Reset auto-commit to true
            connection.setAutoCommit(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error resetting auto-commit: " + ex.getMessage());
        }
}  
    }//GEN-LAST:event_deletePatientBtnMouseClicked

    private void deletePatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatientBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deletePatientBtnActionPerformed

    private void addPatientBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPatientBtnMouseClicked
        // TODO add your handling code here:
        try {
            // Get input from the fields
            String patientId = patientIdField.getText();
            String patientName = patientNameField.getText();
            String patientPhone = patientPhoneField.getText();
            String patientAddress = patientAddressField.getText();
            String gender = (String) genderField.getSelectedItem(); // For gender, get the selected item
            Date patientDateOfBirth = patientDateOfBirthField.getDate(); // For date, get the Date object

            // Validate that none of the required fields are empty
            if (patientId.isEmpty() || patientName.isEmpty() || patientPhone.isEmpty() ||
                patientAddress.isEmpty() || gender == null || patientDateOfBirth == null) {
                JOptionPane.showMessageDialog(this, "Please fill in all fields.");
                return;
            }

            // Prepare the SQL query to insert the data, including the manually entered patientId
            String query = "INSERT INTO patientTbl (patientId, patientName, patientPhone, patientAddress, gender, dateOfBirth) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setInt(1, Integer.parseInt(patientId)); // Set the manually provided patientId
            pst.setString(2, patientName);
            pst.setString(3, patientPhone);
            pst.setString(4, patientAddress);
            pst.setString(5, gender);
            pst.setDate(6, new java.sql.Date(patientDateOfBirth.getTime())); // Convert java.util.Date to java.sql.Date

            // Execute the query
            pst.executeUpdate();

            // Show success message and refresh the table
            JOptionPane.showMessageDialog(this, "Patient added successfully.");
            showPatients(); // Refresh the table
            clearInputFields(); // Clear input fields after adding the patient
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_addPatientBtnMouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:
        this.setExtendedState(Tests.ICONIFIED);
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        // TODO add your handling code here:
        if(this.getExtendedState()!=Tests.MAXIMIZED_BOTH){
            this.setExtendedState(Tests.MAXIMIZED_BOTH);
        }else{
            this.setExtendedState(Tests.NORMAL);
        }
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jLabel15MouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPatientBtn;
    private javax.swing.JButton deletePatientBtn;
    private javax.swing.JComboBox<String> genderField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField patientAddressField;
    private com.toedter.calendar.JDateChooser patientDateOfBirthField;
    private javax.swing.JTextField patientIdField;
    private javax.swing.JTextField patientNameField;
    private javax.swing.JTextField patientPhoneField;
    private javax.swing.JTable patientTable;
    private javax.swing.JButton updatePatientBtn;
    // End of variables declaration//GEN-END:variables
}
